{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87f0174e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from glob import glob\n",
    "import telebot\n",
    "from random import choice\n",
    "TOKEN = '1715580463:AAGSuz7c8EKO43wt_0w6-Yfct8vcOfkVO6U'\n",
    "PATH_SAVED_PICS = 'images_download_from_users'\n",
    "PATH_GEN_PICS = 'images'\n",
    "ANIME = 'anime'\n",
    "name = ''\n",
    "num = 0\n",
    "photo_name = ''\n",
    "bot = telebot.TeleBot(TOKEN)\n",
    "\n",
    "\n",
    "\n",
    "def reg_name(message):\n",
    "    global name\n",
    "    name = message.text\n",
    "    bot.send_message(message.from_user.id, 'Назови номер, данный тебе Окарином')\n",
    "    bot.register_next_step_handler(message, reg_num)\n",
    "\n",
    "def reg_num(message):\n",
    "    global num\n",
    "    while num == 0:\n",
    "        try:\n",
    "            num = int(message.text)\n",
    "        except Exception:\n",
    "            bot.send_message(message.from_user.id, 'Назови номер сотрудника лаборатории гаджетов будущего')\n",
    "\n",
    "def picturing(message, path):\n",
    "    pic_list = glob(path + '/*')\n",
    "    if message.text.isdigit() :\n",
    "        if 1 <= int(message.text) <= len(pic_list):\n",
    "            picture = pic_list[int(message.text) - 1]\n",
    "            if os.path.exists(picture):\n",
    "                photo = open(picture, 'rb')\n",
    "                bot.send_photo(message.from_user.id, photo)\n",
    "            else:\n",
    "                bot.send_message(message.from_user.id, 'Ты ввел некорректный номер')\n",
    "        else:\n",
    "            bot.send_message(message.from_user.id, 'Ты ввел некорректный номер')\n",
    "    else :\n",
    "        bot.send_message(message.from_user.id, 'Ты ввел некорректный номер')\n",
    "\n",
    "\n",
    "def my_pic(message):\n",
    "    picturing(message, PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}')\n",
    "\n",
    "def pic(message):\n",
    "    picturing(message, PATH_GEN_PICS)\n",
    "\n",
    "def vid(message):\n",
    "    webm_list = glob('webm/*')\n",
    "    if 1 <= int(message.text) <= len(webm_list):\n",
    "        webm = webm_list[int(message.text) - 1]\n",
    "        if os.path.exists(webm):\n",
    "            video = open(webm, 'rb')\n",
    "            bot.send_video(message.from_user.id, video)\n",
    "        else:\n",
    "            bot.send_message(message.from_user.id, 'Ты ввел некорректный номер')\n",
    "    else:\n",
    "        bot.send_message(message.from_user.id, 'Ты ввел некорректный номер')\n",
    "\n",
    "def photo_name_handler(message):\n",
    "    global photo_name\n",
    "    photo_name = message.text\n",
    "    bot.send_message(message.from_user.id, 'Теперь загрузи фото')\n",
    "    bot.register_next_step_handler(message, photo_handler)\n",
    "\n",
    "def photo_handler(message):\n",
    "    if photo_name != None :\n",
    "        if os.path.exists(PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}/' + photo_name + '.jpg'):\n",
    "            bot.send_message(message.from_user.id, 'Картинка с таким именем уже есть')\n",
    "            default_photo_handler(message)\n",
    "        elif message.text != '':\n",
    "            if os.path.exists(PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}'):\n",
    "                directory = PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}'\n",
    "            else:\n",
    "                os.mkdir(PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}')\n",
    "                directory = PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}'\n",
    "            photo = message.photo[-1]\n",
    "            file_id = photo.file_id\n",
    "            file_path = bot.get_file(file_id).file_path\n",
    "            downloaded_file = bot.download_file(file_path)\n",
    "            name = photo_name + \".jpg\"\n",
    "            new_file = open(directory + '/' + name, mode='wb')\n",
    "            new_file.write(downloaded_file)\n",
    "            new_file.close()\n",
    "            bot.send_message(message.from_user.id, 'Принял photo_handler')\n",
    "    else :\n",
    "        bot.send_message(message.from_user.id, 'Просила же имя для пикчи, теперь она абракадаброй называется')\n",
    "        default_photo_handler(message)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "@bot.message_handler(commands=['start'])\n",
    "def send_welcome(message):\n",
    "    bot.reply_to(message, \"Я догадываюсь, что тебя подослала Организация, чтобы выведать у меня секреты Хооина Кёмы\")\n",
    "\n",
    "@bot.message_handler(commands=['help'])\n",
    "def send_welcome(message):\n",
    "    bot.reply_to(message, \"Эль псай конгру\")\n",
    "\n",
    "@bot.message_handler(content_types=['voice'])\n",
    "def handler(message):\n",
    "    bot.send_message(message.chat.id, 'Напиши словами, не могу послушать')\n",
    "\n",
    "\n",
    "@bot.message_handler(content_types=['photo'])\n",
    "def default_photo_handler(message):\n",
    "    if os.path.exists('images_from_users/{' + str(message.from_user.id) + '}'):\n",
    "        directory = 'images_from_users/{' + str(message.from_user.id) + '}'\n",
    "    else:\n",
    "        os.mkdir('images_from_users/{' + str(message.from_user.id) + '}')\n",
    "        directory = 'images_from_users/{' + str(message.from_user.id) + '}'\n",
    "    photo = message.photo[-1]\n",
    "    file_id = photo.file_id\n",
    "    file_path = bot.get_file(file_id).file_path\n",
    "    downloaded_file = bot.download_file(file_path)\n",
    "    name = file_id + \".jpg\"\n",
    "    new_file = open(directory + '/' + name, mode='wb')\n",
    "    new_file.write(downloaded_file)\n",
    "    new_file.close()\n",
    "    bot.send_message(message.from_user.id, 'Принял default photo')\n",
    "\n",
    "\n",
    "@bot.message_handler(func=lambda m: True)\n",
    "def echo_all(message):\n",
    "    if message.text == 'привет' :\n",
    "        bot.reply_to(message, 'Я здесь, понятно!?')\n",
    "    elif message.text == 'Srbija' :\n",
    "        bot.reply_to(message,'strong')\n",
    "    elif message.text == 'слава роду' :\n",
    "        bot.reply_to(message,'нет уроду')\n",
    "    elif message.text == 'если есть на свете рай' :\n",
    "        bot.reply_to(message, 'это - Краснодарский край')\n",
    "    elif message.text == '/reg' :\n",
    "        bot.send_message(message.from_user.id, 'Назови свое имя')\n",
    "        bot.register_next_step_handler(message, reg_name)\n",
    "    elif message.text == '/memory' :\n",
    "        if name == '' :\n",
    "            bot.send_message(message.from_user.id, 'Извините, я не знаю Вас')\n",
    "        else :\n",
    "            bot.send_message(message.from_user.id, name + ', перестань волноваться, я жива и помню тебя')\n",
    "    elif message.text == 'rand pic' :\n",
    "        pic_list = glob(PATH_GEN_PICS + '/*')\n",
    "        picture = choice(pic_list)\n",
    "        photo = open(picture, 'rb')\n",
    "        bot.send_photo(message.from_user.id, photo)\n",
    "    elif message.text == 'pic' :\n",
    "        pic_list = glob (PATH_GEN_PICS + '/*')\n",
    "        textp = ''\n",
    "        photo_num = 1\n",
    "        for pic_name in pic_list :\n",
    "            pic_name = pic_name[7:]\n",
    "            textp = textp + ' ' + pic_name + ' - ' + str(photo_num) + '\\n'\n",
    "            photo_num += 1\n",
    "        bot.send_message(message.from_user.id, 'Выбери номер фото из списка:' + textp)\n",
    "        bot.register_next_step_handler(message, pic)\n",
    "    elif message.text == 'rand webm' :\n",
    "        webm_list = glob('webm/*')\n",
    "        webm = choice(webm_list)\n",
    "        video = open(webm, 'rb')\n",
    "        bot.send_video(message.from_user.id, video)\n",
    "    elif message.text == 'webm' :\n",
    "        webm_list = glob ('webm/*')\n",
    "        textw = ''\n",
    "        webm_num = 1\n",
    "        for webm_name in webm_list :\n",
    "            webm_name = webm_name[5:]\n",
    "            textw = textw + ' ' + webm_name + ' - ' + str(webm_num) + '\\n'\n",
    "            webm_num += 1\n",
    "        bot.send_message(message.from_user.id, 'Выбери номер видео из списка:' + textw)\n",
    "        bot.register_next_step_handler(message, vid)\n",
    "    elif message.text == 'my pic' :\n",
    "        path = PATH_SAVED_PICS + '/{' + str(message.from_user.id) + '}'\n",
    "        if os.path.exists(path) :\n",
    "            pic_list = glob(path + '/*')\n",
    "            textp = ''\n",
    "            photo_num = 1\n",
    "            for pic_name in pic_list:\n",
    "                pic_name = pic_name[39:]\n",
    "                textp = textp + ' ' + pic_name + ' - ' + str(photo_num) + '\\n'\n",
    "                photo_num += 1\n",
    "            bot.send_message(message.from_user.id, 'Выбери номер фото из списка:' + textp)\n",
    "            bot.register_next_step_handler(message, my_pic)\n",
    "        else :\n",
    "            bot.send_message(message.from_user.id, 'Ты еще не отправлял мне фото')\n",
    "    elif message.text == 'save pic' :\n",
    "        bot.send_message(message.from_user.id, 'Придумай название для фото')\n",
    "        bot.register_next_step_handler(message, photo_name_handler)\n",
    "    elif message.text == '/anime':\n",
    "        pic_list = glob(ANIME + '/*')\n",
    "        picture = choice(pic_list)\n",
    "        photo = open(picture, 'rb')\n",
    "        bot.send_photo(message.from_user.id, photo)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "bot.polling()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
